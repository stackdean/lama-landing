{"ast":null,"code":"import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutProperties from \"@babel/runtime/helpers/esm/objectWithoutProperties\";\nvar _excluded = [\"className\"];\n\nvar _this = this,\n    _jsxFileName = \"/Users/fady/Desktop/lama-landing/src/reusecore/Counter/index.js\";\n\nvar __jsx = React.createElement;\nimport React, { useState } from \"react\";\nimport CountUp from \"react-countup\";\nimport VisibilitySensor from \"react-visibility-sensor\";\n\nvar Counter = function Counter(_ref) {\n  var className = _ref.className,\n      rest = _objectWithoutProperties(_ref, _excluded);\n\n  var _useState = useState(false),\n      viewPortEntered = _useState[0],\n      setViewPortEntered = _useState[1];\n\n  return __jsx(CountUp, _extends({}, rest, {\n    start: viewPortEntered ? null : 0,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 9,\n      columnNumber: 5\n    }\n  }), function (_ref2) {\n    var countUpRef = _ref2.countUpRef;\n    return __jsx(VisibilitySensor, {\n      active: !viewPortEntered,\n      onChange: function onChange(isVisible) {\n        if (isVisible) {\n          setViewPortEntered(true);\n        }\n      },\n      delayedCall: true,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 12,\n        columnNumber: 11\n      }\n    }, __jsx(\"span\", {\n      className: className,\n      ref: countUpRef,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 21,\n        columnNumber: 13\n      }\n    }));\n  });\n};\n\nexport default Counter;","map":{"version":3,"names":["React","useState","CountUp","VisibilitySensor","Counter","className","rest","viewPortEntered","setViewPortEntered","countUpRef","isVisible"],"sources":["/Users/fady/Desktop/lama-landing/src/reusecore/Counter/index.js"],"sourcesContent":["import React, { useState } from \"react\";\nimport CountUp from \"react-countup\";\nimport VisibilitySensor from \"react-visibility-sensor\";\n\nconst Counter = ({ className, ...rest }) => {\n  const [viewPortEntered, setViewPortEntered] = useState(false);\n\n  return (\n    <CountUp {...rest} start={viewPortEntered ? null : 0}>\n      {({ countUpRef }) => {\n        return (\n          <VisibilitySensor\n            active={!viewPortEntered}\n            onChange={isVisible => {\n              if (isVisible) {\n                setViewPortEntered(true);\n              }\n            }}\n            delayedCall\n          >\n            <span className={className} ref={countUpRef} />\n          </VisibilitySensor>\n        );\n      }}\n    </CountUp>\n  );\n};\n\nexport default Counter;"],"mappings":";;;;;;;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;AACA,OAAOC,OAAP,MAAoB,eAApB;AACA,OAAOC,gBAAP,MAA6B,yBAA7B;;AAEA,IAAMC,OAAO,GAAG,SAAVA,OAAU,OAA4B;EAAA,IAAzBC,SAAyB,QAAzBA,SAAyB;EAAA,IAAXC,IAAW;;EAC1C,gBAA8CL,QAAQ,CAAC,KAAD,CAAtD;EAAA,IAAOM,eAAP;EAAA,IAAwBC,kBAAxB;;EAEA,OACE,MAAC,OAAD,eAAaF,IAAb;IAAmB,KAAK,EAAEC,eAAe,GAAG,IAAH,GAAU,CAAnD;IAAA;IAAA;MAAA;MAAA;MAAA;IAAA;EAAA,IACG,iBAAoB;IAAA,IAAjBE,UAAiB,SAAjBA,UAAiB;IACnB,OACE,MAAC,gBAAD;MACE,MAAM,EAAE,CAACF,eADX;MAEE,QAAQ,EAAE,kBAAAG,SAAS,EAAI;QACrB,IAAIA,SAAJ,EAAe;UACbF,kBAAkB,CAAC,IAAD,CAAlB;QACD;MACF,CANH;MAOE,WAAW,MAPb;MAAA;MAAA;QAAA;QAAA;QAAA;MAAA;IAAA,GASE;MAAM,SAAS,EAAEH,SAAjB;MAA4B,GAAG,EAAEI,UAAjC;MAAA;MAAA;QAAA;QAAA;QAAA;MAAA;IAAA,EATF,CADF;EAaD,CAfH,CADF;AAmBD,CAtBD;;AAwBA,eAAeL,OAAf"},"metadata":{},"sourceType":"module"}