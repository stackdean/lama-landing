{"ast":null,"code":"import _extends from \"/Users/fady/Desktop/lama-landing/node_modules/@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutProperties from \"/Users/fady/Desktop/lama-landing/node_modules/@babel/runtime/helpers/esm/objectWithoutProperties\";\n\nvar _jsxFileName = \"/Users/fady/Desktop/lama-landing/src/reusecore/Counter/index.js\",\n    _this = this,\n    _s = $RefreshSig$();\n\nvar __jsx = React.createElement;\nimport React, { useState } from \"react\";\nimport CountUp from \"react-countup\";\nimport VisibilitySensor from \"react-visibility-sensor\";\n\nvar Counter = function Counter(_ref) {\n  _s();\n\n  var className = _ref.className,\n      rest = _objectWithoutProperties(_ref, [\"className\"]);\n\n  var _useState = useState(false),\n      viewPortEntered = _useState[0],\n      setViewPortEntered = _useState[1];\n\n  return __jsx(CountUp, _extends({}, rest, {\n    start: viewPortEntered ? null : 0,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 9,\n      columnNumber: 5\n    }\n  }), function (_ref2) {\n    var countUpRef = _ref2.countUpRef;\n    return __jsx(VisibilitySensor, {\n      active: !viewPortEntered,\n      onChange: function onChange(isVisible) {\n        if (isVisible) {\n          setViewPortEntered(true);\n        }\n      },\n      delayedCall: true,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 12,\n        columnNumber: 11\n      }\n    }, __jsx(\"span\", {\n      className: className,\n      ref: countUpRef,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 21,\n        columnNumber: 13\n      }\n    }));\n  });\n};\n\n_s(Counter, \"8AKg4UTEcuAm2yS5CsLyRzCMCDY=\");\n\n_c = Counter;\nexport default Counter;\n\nvar _c;\n\n$RefreshReg$(_c, \"Counter\");","map":{"version":3,"sources":["/Users/fady/Desktop/lama-landing/src/reusecore/Counter/index.js"],"names":["React","useState","CountUp","VisibilitySensor","Counter","className","rest","viewPortEntered","setViewPortEntered","countUpRef","isVisible"],"mappings":";;;;;;;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;AACA,OAAOC,OAAP,MAAoB,eAApB;AACA,OAAOC,gBAAP,MAA6B,yBAA7B;;AAEA,IAAMC,OAAO,GAAG,SAAVA,OAAU,OAA4B;AAAA;;AAAA,MAAzBC,SAAyB,QAAzBA,SAAyB;AAAA,MAAXC,IAAW;;AAAA,kBACIL,QAAQ,CAAC,KAAD,CADZ;AAAA,MACnCM,eADmC;AAAA,MAClBC,kBADkB;;AAG1C,SACE,MAAC,OAAD,eAAaF,IAAb;AAAmB,IAAA,KAAK,EAAEC,eAAe,GAAG,IAAH,GAAU,CAAnD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MACG,iBAAoB;AAAA,QAAjBE,UAAiB,SAAjBA,UAAiB;AACnB,WACE,MAAC,gBAAD;AACE,MAAA,MAAM,EAAE,CAACF,eADX;AAEE,MAAA,QAAQ,EAAE,kBAAAG,SAAS,EAAI;AACrB,YAAIA,SAAJ,EAAe;AACbF,UAAAA,kBAAkB,CAAC,IAAD,CAAlB;AACD;AACF,OANH;AAOE,MAAA,WAAW,MAPb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OASE;AAAM,MAAA,SAAS,EAAEH,SAAjB;AAA4B,MAAA,GAAG,EAAEI,UAAjC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MATF,CADF;AAaD,GAfH,CADF;AAmBD,CAtBD;;GAAML,O;;KAAAA,O;AAwBN,eAAeA,OAAf","sourcesContent":["import React, { useState } from \"react\";\nimport CountUp from \"react-countup\";\nimport VisibilitySensor from \"react-visibility-sensor\";\n\nconst Counter = ({ className, ...rest }) => {\n  const [viewPortEntered, setViewPortEntered] = useState(false);\n\n  return (\n    <CountUp {...rest} start={viewPortEntered ? null : 0}>\n      {({ countUpRef }) => {\n        return (\n          <VisibilitySensor\n            active={!viewPortEntered}\n            onChange={isVisible => {\n              if (isVisible) {\n                setViewPortEntered(true);\n              }\n            }}\n            delayedCall\n          >\n            <span className={className} ref={countUpRef} />\n          </VisibilitySensor>\n        );\n      }}\n    </CountUp>\n  );\n};\n\nexport default Counter;"]},"metadata":{},"sourceType":"module"}