{"ast":null,"code":"var _jsxFileName = \"/Users/fady/lama-landing/src/reusecore/Text/index.js\";\nvar __jsx = React.createElement;\n\nfunction _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\nimport React from \"react\";\nimport PropTypes from \"prop-types\";\nimport styled, { css } from \"styled-components\";\nconst TextWrapper = styled.p.withConfig({\n  displayName: \"Text__TextWrapper\",\n  componentId: \"sc-13w0tcv-0\"\n})([\"margin-top:0;margin-bottom:1rem;\", \" \", \"\"], props => props.FontSize && css([\"font-size:\", \";\"], props.FontSize), props => props.TextColor && css([\"color:\", \";\"], props.TextColor));\n\nconst Text = (_ref) => {\n  let {\n    children\n  } = _ref,\n      props = _objectWithoutProperties(_ref, [\"children\"]);\n\n  const AllClasses = [\"text\"];\n\n  if (props.className) {\n    AllClasses.push(props.className);\n  }\n\n  return __jsx(TextWrapper, _extends({}, props, {\n    className: AllClasses.join(\" \"),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 26,\n      columnNumber: 5\n    }\n  }), children);\n};\n\nexport default Text;\nText.propTypes = {\n  children: PropTypes.any.isRequired,\n  as: PropTypes.oneOf([\"p\", \"span\", \"strong\", \"em\"])\n};\nText.defaultProps = {\n  as: \"p\"\n};","map":{"version":3,"sources":["/Users/fady/lama-landing/src/reusecore/Text/index.js"],"names":["React","PropTypes","styled","css","TextWrapper","p","props","FontSize","TextColor","Text","children","AllClasses","className","push","join","propTypes","any","isRequired","as","oneOf","defaultProps"],"mappings":";;;;;;;;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,SAAP,MAAsB,YAAtB;AACA,OAAOC,MAAP,IAAiBC,GAAjB,QAA4B,mBAA5B;AAEA,MAAMC,WAAW,GAAGF,MAAM,CAACG,CAAV;AAAA;AAAA;AAAA,kDAGbC,KAAK,IACLA,KAAK,CAACC,QAAN,IACAJ,GADA,sBAEeG,KAAK,CAACC,QAFrB,CAJa,EAQbD,KAAK,IACLA,KAAK,CAACE,SAAN,IACAL,GADA,kBAEWG,KAAK,CAACE,SAFjB,CATa,CAAjB;;AAeA,MAAMC,IAAI,GAAG,UAA4B;AAAA,MAA3B;AAAEC,IAAAA;AAAF,GAA2B;AAAA,MAAZJ,KAAY;;AACvC,QAAMK,UAAU,GAAG,CAAC,MAAD,CAAnB;;AACA,MAAIL,KAAK,CAACM,SAAV,EAAqB;AACnBD,IAAAA,UAAU,CAACE,IAAX,CAAgBP,KAAK,CAACM,SAAtB;AACD;;AACD,SACE,MAAC,WAAD,eAAiBN,KAAjB;AAAwB,IAAA,SAAS,EAAEK,UAAU,CAACG,IAAX,CAAgB,GAAhB,CAAnC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MACGJ,QADH,CADF;AAKD,CAVD;;AAWA,eAAeD,IAAf;AAEAA,IAAI,CAACM,SAAL,GAAiB;AACfL,EAAAA,QAAQ,EAAET,SAAS,CAACe,GAAV,CAAcC,UADT;AAEfC,EAAAA,EAAE,EAAEjB,SAAS,CAACkB,KAAV,CAAgB,CAAC,GAAD,EAAM,MAAN,EAAc,QAAd,EAAwB,IAAxB,CAAhB;AAFW,CAAjB;AAKAV,IAAI,CAACW,YAAL,GAAoB;AAClBF,EAAAA,EAAE,EAAE;AADc,CAApB","sourcesContent":["import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport styled, { css } from \"styled-components\";\n\nconst TextWrapper = styled.p`\n  margin-top: 0;\n  margin-bottom: 1rem; \n  ${props =>\n    props.FontSize &&\n    css`\n      font-size: ${props.FontSize};\n    `}\n  ${props =>\n    props.TextColor &&\n    css`\n      color: ${props.TextColor};\n    `}\n`;\n\nconst Text = ({ children, ...props }) => {\n  const AllClasses = [\"text\"];\n  if (props.className) {\n    AllClasses.push(props.className);\n  }\n  return (\n    <TextWrapper {...props} className={AllClasses.join(\" \")}>\n      {children}\n    </TextWrapper>\n  );\n};\nexport default Text;\n\nText.propTypes = {\n  children: PropTypes.any.isRequired,\n  as: PropTypes.oneOf([\"p\", \"span\", \"strong\", \"em\"]),  \n};\n\nText.defaultProps = {\n  as: \"p\"\n};\n"]},"metadata":{},"sourceType":"module"}