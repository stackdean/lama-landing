{"ast":null,"code":"var _jsxFileName = \"/Users/fady/lama-landing/src/reusecore/Counter/index.js\";\nvar __jsx = React.createElement;\n\nfunction _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\nimport React, { useState } from \"react\";\nimport CountUp from \"react-countup\";\nimport VisibilitySensor from \"react-visibility-sensor\";\n\nconst Counter = (_ref) => {\n  let {\n    className\n  } = _ref,\n      rest = _objectWithoutProperties(_ref, [\"className\"]);\n\n  const {\n    0: viewPortEntered,\n    1: setViewPortEntered\n  } = useState(false);\n  return __jsx(CountUp, _extends({}, rest, {\n    start: viewPortEntered ? null : 0,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 9,\n      columnNumber: 5\n    }\n  }), ({\n    countUpRef\n  }) => {\n    return __jsx(VisibilitySensor, {\n      active: !viewPortEntered,\n      onChange: isVisible => {\n        if (isVisible) {\n          setViewPortEntered(true);\n        }\n      },\n      delayedCall: true,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 12,\n        columnNumber: 11\n      }\n    }, __jsx(\"span\", {\n      className: className,\n      ref: countUpRef,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 21,\n        columnNumber: 13\n      }\n    }));\n  });\n};\n\nexport default Counter;","map":{"version":3,"sources":["/Users/fady/lama-landing/src/reusecore/Counter/index.js"],"names":["React","useState","CountUp","VisibilitySensor","Counter","className","rest","viewPortEntered","setViewPortEntered","countUpRef","isVisible"],"mappings":";;;;;;;;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;AACA,OAAOC,OAAP,MAAoB,eAApB;AACA,OAAOC,gBAAP,MAA6B,yBAA7B;;AAEA,MAAMC,OAAO,GAAG,UAA4B;AAAA,MAA3B;AAAEC,IAAAA;AAAF,GAA2B;AAAA,MAAXC,IAAW;;AAC1C,QAAM;AAAA,OAACC,eAAD;AAAA,OAAkBC;AAAlB,MAAwCP,QAAQ,CAAC,KAAD,CAAtD;AAEA,SACE,MAAC,OAAD,eAAaK,IAAb;AAAmB,IAAA,KAAK,EAAEC,eAAe,GAAG,IAAH,GAAU,CAAnD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MACG,CAAC;AAAEE,IAAAA;AAAF,GAAD,KAAoB;AACnB,WACE,MAAC,gBAAD;AACE,MAAA,MAAM,EAAE,CAACF,eADX;AAEE,MAAA,QAAQ,EAAEG,SAAS,IAAI;AACrB,YAAIA,SAAJ,EAAe;AACbF,UAAAA,kBAAkB,CAAC,IAAD,CAAlB;AACD;AACF,OANH;AAOE,MAAA,WAAW,MAPb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OASE;AAAM,MAAA,SAAS,EAAEH,SAAjB;AAA4B,MAAA,GAAG,EAAEI,UAAjC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MATF,CADF;AAaD,GAfH,CADF;AAmBD,CAtBD;;AAwBA,eAAeL,OAAf","sourcesContent":["import React, { useState } from \"react\";\nimport CountUp from \"react-countup\";\nimport VisibilitySensor from \"react-visibility-sensor\";\n\nconst Counter = ({ className, ...rest }) => {\n  const [viewPortEntered, setViewPortEntered] = useState(false);\n\n  return (\n    <CountUp {...rest} start={viewPortEntered ? null : 0}>\n      {({ countUpRef }) => {\n        return (\n          <VisibilitySensor\n            active={!viewPortEntered}\n            onChange={isVisible => {\n              if (isVisible) {\n                setViewPortEntered(true);\n              }\n            }}\n            delayedCall\n          >\n            <span className={className} ref={countUpRef} />\n          </VisibilitySensor>\n        );\n      }}\n    </CountUp>\n  );\n};\n\nexport default Counter;"]},"metadata":{},"sourceType":"module"}