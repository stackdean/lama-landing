{"ast":null,"code":"var _jsxFileName = \"/Users/fady/lama-landing/src/reusecore/Layout/Row/index.js\";\nvar __jsx = React.createElement;\n\nfunction _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\nimport React from \"react\";\nimport PropTypes from \"prop-types\";\nimport RowWrapper from \"./row.style\";\n\nconst Row = (_ref) => {\n  let {\n    children\n  } = _ref,\n      props = _objectWithoutProperties(_ref, [\"children\"]);\n\n  const AllClasses = [\"row\"];\n\n  if (props.className) {\n    AllClasses.push(props.className);\n  }\n\n  return __jsx(RowWrapper, _extends({}, props, {\n    className: AllClasses.join(\" \"),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 12,\n      columnNumber: 5\n    }\n  }), children);\n};\n\nexport default Row;\nRow.propTypes = {\n  children: PropTypes.any.isRequired\n};","map":{"version":3,"sources":["/Users/fady/lama-landing/src/reusecore/Layout/Row/index.js"],"names":["React","PropTypes","RowWrapper","Row","children","props","AllClasses","className","push","join","propTypes","any","isRequired"],"mappings":";;;;;;;;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,SAAP,MAAsB,YAAtB;AACA,OAAOC,UAAP;;AAEA,MAAMC,GAAG,GAAG,UAA4B;AAAA,MAA3B;AAAEC,IAAAA;AAAF,GAA2B;AAAA,MAAZC,KAAY;;AACtC,QAAMC,UAAU,GAAG,CAAC,KAAD,CAAnB;;AACA,MAAID,KAAK,CAACE,SAAV,EAAqB;AACnBD,IAAAA,UAAU,CAACE,IAAX,CAAgBH,KAAK,CAACE,SAAtB;AACD;;AAED,SACE,MAAC,UAAD,eAAgBF,KAAhB;AAAuB,IAAA,SAAS,EAAEC,UAAU,CAACG,IAAX,CAAgB,GAAhB,CAAlC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MACGL,QADH,CADF;AAKD,CAXD;;AAaA,eAAeD,GAAf;AAEAA,GAAG,CAACO,SAAJ,GAAgB;AACdN,EAAAA,QAAQ,EAAEH,SAAS,CAACU,GAAV,CAAcC;AADV,CAAhB","sourcesContent":["import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport RowWrapper from \"./row.style\";\n\nconst Row = ({ children, ...props }) => {\n  const AllClasses = [\"row\"];\n  if (props.className) {\n    AllClasses.push(props.className);\n  }\n\n  return (\n    <RowWrapper {...props} className={AllClasses.join(\" \")}>\n      {children}\n    </RowWrapper>\n  );\n};\n\nexport default Row;\n\nRow.propTypes = {\n  children: PropTypes.any.isRequired\n};\n"]},"metadata":{},"sourceType":"module"}