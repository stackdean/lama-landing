{"ast":null,"code":"var __jsx = React.createElement;\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\nimport React from \"react\";\nimport { Link as OnepageLink } from \"react-scroll\";\nimport Link from 'next/link';\n\nconst ScrollspyMenu = (_ref) => {\n  let {\n    menuItems\n  } = _ref,\n      props = _objectWithoutProperties(_ref, [\"menuItems\"]);\n\n  const addAllClasses = [\"\"];\n\n  if (props.className) {\n    addAllClasses.push(props.className);\n  }\n\n  return __jsx(\"ul\", {\n    className: addAllClasses.join(\" \")\n  }, menuItems.map((menu, index) => __jsx(\"li\", {\n    key: index,\n    className: menu.subItems !== undefined ? \"nav-item has-dropdown\" : \"nav-item\"\n  }, __jsx(OnepageLink, {\n    activeClass: \"nav-active\",\n    to: menu.path,\n    spy: true,\n    smooth: true,\n    offset: parseInt(menu.offset),\n    duration: 700\n  }, menu.name), menu.subItems !== undefined && __jsx(\"ul\", {\n    key: index,\n    className: \"dropdown\"\n  }, menu.subItems.map((subItem, i) => __jsx(\"li\", {\n    key: i\n  }, __jsx(Link, {\n    href: subItem.path\n  }, __jsx(\"a\", null, subItem.name))))))), __jsx(\"li\", null, __jsx(\"button\", {\n    className: \"nav__button\"\n  }, \"Get in Touch\")));\n};\n\nexport default ScrollspyMenu;","map":null,"metadata":{},"sourceType":"module"}