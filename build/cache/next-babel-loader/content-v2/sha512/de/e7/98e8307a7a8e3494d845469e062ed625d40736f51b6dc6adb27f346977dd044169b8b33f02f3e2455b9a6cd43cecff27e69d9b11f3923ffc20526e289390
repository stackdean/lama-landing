{"ast":null,"code":"var __jsx = React.createElement;\n\nfunction _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\nimport React from \"react\";\nimport InputWrapper from \"./input.style\";\n\nconst Input = (_ref) => {\n  let {\n    //   type,\n    placeholder,\n    name,\n    onChange,\n    onBulr,\n    onFocus\n  } = _ref,\n      props = _objectWithoutProperties(_ref, [\"placeholder\", \"name\", \"onChange\", \"onBulr\", \"onFocus\"]);\n\n  const AllClasses = [\"input__wrapper\"];\n\n  if (props.className) {\n    AllClasses.push(props.className);\n  }\n\n  return __jsx(InputWrapper, {\n    className: AllClasses.join(\" \")\n  }, __jsx(\"input\", _extends({\n    placeholder: placeholder,\n    name: name\n  }, props)));\n}; // Input.propTypes = {\n//     type: PropTypes.oneOf['text', 'email', 'password', 'number'],\n//     placeholder: PropTypes.string,\n//     name: PropTypes.string,\n//     onChange: PropTypes.func,\n//     onBulr: PropTypes.func,\n//     onFocus: PropTypes.func \n// }\n// Input.defaultProps = {\n//     type: 'text',   \n// }\n\n\nexport default Input;","map":null,"metadata":{},"sourceType":"module"}